1. 输入[2,3,4,[55,77,[6,43,2]],33]输出：[2,3,4,55,77,6,43,2,33]
方法一：递归
function handleArr1(arr){
  var result = [];
  var inner = (arr) => {
    for (var i = 0; i < arr.length; i++){
        let temp = arr[i];
      if (typeof temp === "number" && !isNaN(temp)){
        result.push(arr[i]);
      }else if(temp.constructor === Array && Object.prototype.toString.call(temp) === "[object Array]"){
        inner(arr[i]);
      }
    }
  }
  inner(arr);
  return result;
}
方法二：利用toString
function handleArr2(arr){
  var arrs = arr.toString().split(",");
  arrs.map((value,index,arrs) => {
    return Number(value);
  })
  return arrs;
}

2.undefined和null的区别, 还有undeclared:
null表示没有对象, 即此处不该有此值. 典型用法:
（1） 作为函数的参数，表示该函数的参数不是对象。
（2） 作为对象原型链的终点。
（3） null可以作为空指针. 只要意在保存对象的值还没有真正保存对象,就应该明确地让该对象保存null值。
undefined表示缺少值, 即此处应该有值, 但还未定义.
（1）变量被声明了，但没有赋值时，就等于undefined。
（2) 调用函数时，应该提供的参数没有提供，该参数等于undefined。
（3）对象没有赋值的属性，该属性的值为undefined。
（4）函数没有返回值时，默认返回undefined。
undeclared即为被污染的命名, 访问没有被声明的变量, 则会抛出异常, 终止执行. 即undeclared是一种语法错误。

3.JS如何判断一组数字是否连续
// 当出现连续数字的时候以‘-’输出[1, 2, 3, 4, 6, 8, 9, 10]，期望结果：["1-4", 6, "8-10"]
//判断是否连续：判断前后数字是否相差为1，如果是则加入同一个数组
var arrange = function(arr){
    var result = [],temp = [];
    arr.sort(function(source, dest){
        return source - dest;
    }).concat(Infinity).reduce(function(source, dest){
        temp.push(source);
        if(dest-source > 1){
            result.push(temp);
            temp = [];
        }
        return dest;
    });
    return result;
};
var formatarr = function(arr) {
    var newArr = []
    var arr1 = arrange(arr)
    for (var i in arr1) {
        var str = '';
        if (arr1[i].length > 1) {
            str = arr1[i][0] + '-' + arr1[i][arr1[i].length - 1];
            newArr.push(str)
        } else {
            newArr.push(arr1[i][0]);
        }
   }
   return newArr;
}

4.CSS的盒子模型
包含元素内容content、内边距padding、边框border、外边距margin
box-sizing:border-box;content-box;inherit;
content-box:总宽度=margin+border+padding+width，即为标准模型；
border-box:总宽度=margin+width，即为IE模型；
inherit:继承父元素的border-sizing属性。

5.AJAX的readyState几种状态
0——初始化
1——载入
2——载入完成
3——解析
4——完成

6.判断是否回文
var str = 'resiviser';
function reserve(str) {
  return str === str.split('').reverse().join('');
}

7. 数组去重 
方法一//includes indexOf
function unique(arr) {
  const container = {};
  const newArr = [];
  for(let i = 0,len = arr.length;i < len; i++) {
    if (!container[arr[i]]) {
      container[arr[i]] = true;
      newArr.push(arr[i]);
    }
  }
  return newArr;
}
方法二
[1,2,3,1,'a',1,'a'].filter(function(ele,index,array){ return index===array.indexOf(ele)})
方法三
[...new Set([1,2,3,1,'a',1,'a'])] 

8.尾递归阶乘
function factorial(num) {
  if(num <= 1) return 1;
  return num * factorial(num - 1);
}

9.// 统计字符串出现次数最多的字母
function findMoreLetter(str) {
  let container = {};
  var maxValue = 0;
  let maxKey = '';
  str = str.split('');
  for(let i = 0,len = str.length; i < len; i++) {
    if(!container[str[i]]) {
      container[str[i]] = 1;
    } else {
      ++ container[str[i]];
    }
  }
  Object.keys(container).forEach((key) => {
    if (container[key] >= maxValue) {
      maxValue = container[key];
      maxKey = key;
    } 
  });
  return maxKey + '一共出现了' + maxValue;
}
console.log(findMoreLetter('asdfsasdasfas'));

10.字符串转驼峰border-bottom-color ----> borderBottomColor
var str="border-bottom-color";
function Change(str){
    var arr=str.split("-");
    for(var i=1;i<arr.length;i++){
        arr[i]=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
    }
    str=arr.join("");
    return str;
}
console.log(Change(str));//borderBottomColor

11.给定一个学生列表，学生信息由班级、分数、姓名等组成。请按照下列规则对学生列表进行排序：
按照班级从小到大进行排列; 班级相同时，按照成绩从大到小排序; 班级和成绩相同时，按照学生列表中的先后顺序排序
输入：学生列表   输出：排序后的学生列表
样例输入： 
[{“name”:”张三”,”class”:2,”score”:64},{“name”:”李四”,”class”:1,”score”:80},{“name”:”王五”,”class”:1,”score”:80},{“name”:”赵六”,”class”:4,”score”:94}]
样例输出： 
[{“name”:”李四”,”class”:1,”score”:80},{“name”:”王五”,”class”:1,”score”:80},{“name”:”张三”,”class”:2,”score”:64},{“name”:”赵六”,”class”:4,”score”:94}]
function sortStudents(students) {
    students.sort((a,b)=>{
        if (a.class===b.class) 
            if (a.score===b.score) 
                return 0;
            else return b.score - a.score;
        else return a.class - b.class;
    });
    return JSON.stringify(students);

}
students = [{"name":"张三","class":2,"score":64},{"name":"李四","class":1,"score":80},{"name":"王五","class":1,"score":80},{"name":"赵六","class":4,"score":94}]
sortStudents = sortStudents(students);
console.log(sortStudents);

12.Doctype作用? 严格模式与混杂模式-如何触发这两种模式，区分它们有何意义?
（1）、<!DOCTYPE> 声明位于文档中的最前面，处于 <html> 标签之前。告知浏览器的解析器，用什么文档类型 规范来解析这个文档。 
（2）、严格模式的排版和 JS 运作模式是  以该浏览器支持的最高标准运行。
（3）、在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。
（4）、DOCTYPE不存在或格式不正确会导致文档以混杂模式呈现。

13.行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？
（1）CSS规范规定，每个元素都有display属性，确定该元素的类型，每个元素都有默认的display值，比如div默认display属性值为“block”，成为“块级”元素；span默认display属性值为“inline”，是“行内”元素。  
（2）行内元素有：a b span img input select strong（强调的语气） 块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p  
（3）知名的空元素： <br> <hr> <img> <input> <link> <meta> 
 鲜为人知的是： <area> <base> <col> <command> <embed> <keygen> <param> <source> <track> <wbr>
     
 14.link 和@import 的区别是?
（1）、link属于XHTML标签，而@import是CSS提供的;
（2）、页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;
（3）、import只在IE5以上才能识别，而link是XHTML标签，无兼容问题;
（4）、link方式的样式的权重 高于@import的权重.
  
15.XHTML 与 HTML 之间的差异?
XHTML 是更严谨更纯净的 HTML 版本。XHTML 与 HTML 4.01 标准没有太多的不同。
最主要的不同：
XHTML 元素必须被正确地嵌套。
XHTML 元素必须被关闭。
标签名必须用小写字母。
XHTML 文档必须拥有根元素。

16.CSS 选择符有哪些？哪些属性可以继承？优先级算法如何计算？ CSS3新增伪类有那些？
1>.id选择器（ # myid）
2>.类选择器（.myclassname）
3>.标签选择器（div, h1, p）
4>.相邻选择器（h1 + p）
5>.子选择器（ul < li）
6>.后代选择器（li a）
7>.通配符选择器（ * ）
8>.属性选择器（a[rel = "external"]）
9>.伪类选择器（a: hover, li: nth - child）
*   可继承： font-size font-family color, UL LI DL DD DT;
*   不可继承 ：border padding margin width height ;
*   优先级就近原则，样式定义最近者为准;
*   载入样式以最后载入的定位为准;
优先级为:
!important >  id > class > tag  
important 比 内联优先级高
CSS3新增伪类举例：
p:first-of-type 选择属于其父元素的首个 <p> 元素的每个 <p> 元素。
p:last-of-type  选择属于其父元素的最后 <p> 元素的每个 <p> 元素。
p:only-of-type  选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。
p:only-child    选择属于其父元素的唯一子元素的每个 <p> 元素。
p:nth-child(2)  选择属于其父元素的第二个子元素的每个 <p> 元素。
:enabled、:disabled 控制表单控件的禁用状态。
:checked，单选框或复选框被选中。

17.JavaScript的数据对象有那些属性值？
writable：这个属性的值是否可以改。
configurable：这个属性的配置是否可以删除，修改。
enumerable：这个属性是否能在for…in循环中遍历出来或在Object.keys中列举出来。
value：属性值。

18.css定义的权重
标签的权重为1，class的权重为10，id的权重为100，以下例子是演示各种定义的权重值：

19.eval是做什么的？
它的功能是把对应的字符串解析成JS代码并运行；
避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。

20.答案是多少？
(function(x){
    delete x;
    alert(x);
})(1+5);
函数参数无法delete删除，delete只能删除通过for in访问的属性。
当然，删除失败也不会报错，所以代码运行会弹出“6”。
